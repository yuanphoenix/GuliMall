<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <artifactId>renren-fast</artifactId>
  <build>
    <extensions>
      <extension>
        <artifactId>wagon-ssh</artifactId>
        <groupId>org.apache.maven.wagon</groupId>
        <version>2.8</version>
      </extension>
    </extensions>
    <finalName>${project.artifactId}</finalName>
    <plugins>


      <plugin>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <groupId>org.springframework.boot</groupId>
      </plugin>

      <plugin>
        <artifactId>wagon-maven-plugin</artifactId>
        <configuration>
          <commands>
            <!-- Kill Old Process -->
            <command>kill -9 `ps -ef |grep ${project.artifactId}.jar|grep -v "grep" |awk '{print
              $2}'`
            </command>
            <!-- Restart jar package，write result into renren.log -->
            <command>
              <![CDATA[nohup java -jar ${service-path}/${pack-name} --spring.profiles.active=test > ${service-path}/renren.log 2>&1 & ]]></command>
            <command><![CDATA[netstat -nptl]]></command>
            <command><![CDATA[ps -ef | grep java | grep -v grep]]></command>
          </commands>
          <displayCommandOutputs>true</displayCommandOutputs>
          <fromFile>target/${pack-name}</fromFile>
          <!-- 运行命令 mvn clean package wagon:upload-single wagon:sshexec-->
          <url>
            <![CDATA[scp://${remote-username}:${remote-passwd}@${remote-addr}${service-path}]]></url>
        </configuration>
        <groupId>org.codehaus.mojo</groupId>
        <version>1.0</version>
      </plugin>

      <plugin>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <dockerDirectory>${project.basedir}</dockerDirectory>
          <imageName>renren/fast</imageName>
          <resources>
            <resource>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.jar</include>
              <targetPath>/</targetPath>
            </resource>
          </resources>
        </configuration>
        <groupId>com.spotify</groupId>
        <!--<executions>-->
        <!--<execution>-->
        <!--<phase>package</phase>-->
        <!--<goals>-->
        <!--<goal>build</goal>-->
        <!--</goals>-->
        <!--</execution>-->
        <!--</executions>-->
        <version>0.4.14</version>
        <!-- 运行命令 mvn clean package docker:build 打包并生成docker镜像 -->
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <artifactId>gulimall-common</artifactId>
      <groupId>com.atguigu.gulimall</groupId>
      <version>0.0.1-SNAPSHOT</version>

    </dependency>

    <!-- spring boot3 引入可选模块 -->
    <dependency>
      <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
      <groupId>com.baomidou</groupId>
    </dependency>

    <!-- jdk 11+ 引入可选模块 -->
    <dependency>
      <artifactId>mybatis-plus-jsqlparser</artifactId>
      <groupId>com.baomidou</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-aop</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-context-support</artifactId>
      <groupId>org.springframework</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-data-redis</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-validation</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <groupId>org.springframework.boot</groupId>
      <optional>true</optional>
    </dependency>
    <!--<dependency>-->
    <!--<groupId>org.springframework.boot</groupId>-->
    <!--<artifactId>spring-boot-devtools</artifactId>-->
    <!--<optional>true</optional>-->
    <!--</dependency>-->

    <!--oracle驱动-->
    <dependency>
      <artifactId>ojdbc6</artifactId>
      <groupId>com.oracle</groupId>
      <version>${oracle.version}</version>
    </dependency>
    <!--mssql驱动-->
    <dependency>
      <artifactId>sqljdbc4</artifactId>
      <groupId>com.microsoft.sqlserver</groupId>
      <version>${mssql.version}</version>
    </dependency>
    <!--postgresql驱动-->
    <dependency>
      <artifactId>postgresql</artifactId>
      <groupId>org.postgresql</groupId>
    </dependency>
    <dependency>
      <artifactId>druid-spring-boot-starter</artifactId>
      <groupId>com.alibaba</groupId>
      <version>${druid.version}</version>
    </dependency>
    <dependency>
      <artifactId>quartz</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>c3p0</artifactId>
          <groupId>com.mchange</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.quartz-scheduler</groupId>
      <version>${quartz.version}</version>
    </dependency>
    <dependency>
      <artifactId>commons-lang</artifactId>
      <groupId>commons-lang</groupId>
      <version>${commons.lang.version}</version>
    </dependency>
    <dependency>
      <artifactId>commons-fileupload</artifactId>
      <groupId>commons-fileupload</groupId>
      <version>${commons.fileupload.version}</version>
    </dependency>
    <dependency>
      <artifactId>commons-io</artifactId>
      <groupId>commons-io</groupId>
      <version>${commons.io.version}</version>
    </dependency>
    <dependency>
      <artifactId>commons-codec</artifactId>
      <groupId>commons-codec</groupId>
      <version>${commons.codec.version}</version>
    </dependency>
    <dependency>
      <artifactId>commons-configuration</artifactId>
      <groupId>commons-configuration</groupId>
      <version>${commons.configuration.version}</version>
    </dependency>


    <dependency>
      <artifactId>shiro-spring</artifactId>
      <classifier>jakarta</classifier>
      <exclusions>
        <exclusion>
          <artifactId>shiro-web</artifactId>
          <groupId>org.apache.shiro</groupId>
        </exclusion>
        <exclusion>
          <artifactId>shiro-core</artifactId>
          <groupId>org.apache.shiro</groupId>
        </exclusion>
      </exclusions>
      <groupId>org.apache.shiro</groupId>
      <version>1.13.0</version>
    </dependency>
    <dependency>
      <artifactId>shiro-core</artifactId>
      <classifier>jakarta</classifier>
      <groupId>org.apache.shiro</groupId>
      <version>1.13.0</version>
    </dependency>
    <dependency>
      <artifactId>shiro-web</artifactId>
      <classifier>jakarta</classifier>
      <groupId>org.apache.shiro</groupId>
      <version>1.13.0</version>
    </dependency>
    <dependency>
      <artifactId>jaxb-api</artifactId>
      <groupId>javax.xml.bind</groupId>
      <version>2.3.0</version>
    </dependency>


    <dependency>
      <artifactId>jjwt-api</artifactId>
      <groupId>io.jsonwebtoken</groupId>
      <version>${jwt.version}</version>
    </dependency>
    <dependency>
      <artifactId>kaptcha</artifactId>
      <groupId>com.github.axet</groupId>
      <version>${kaptcha.version}</version>
    </dependency>
    <dependency>
      <artifactId>qiniu-java-sdk</artifactId>
      <groupId>com.qiniu</groupId>
      <version>${qiniu.version}</version>
    </dependency>
    <dependency>
      <artifactId>aliyun-sdk-oss</artifactId>
      <groupId>com.aliyun.oss</groupId>
      <version>${aliyun.oss.version}</version>
    </dependency>
    <dependency>
      <artifactId>cos_api</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
      <groupId>com.qcloud</groupId>
      <version>${qcloud.cos.version}</version>
    </dependency>
    <dependency>
      <artifactId>joda-time</artifactId>
      <groupId>joda-time</groupId>
      <version>${joda.time.version}</version>
    </dependency>
    <dependency>
      <artifactId>gson</artifactId>
      <groupId>com.google.code.gson</groupId>
      <version>${gson.version}</version>
    </dependency>

    <dependency>
      <artifactId>fastjson</artifactId>
      <groupId>com.alibaba</groupId>
      <version>${fastjson.version}</version>
    </dependency>
    <dependency>
      <artifactId>hutool-all</artifactId>
      <groupId>cn.hutool</groupId>
      <version>${hutool.version}</version>
    </dependency>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <version>${lombok.version}</version>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <artifactId>spring-cloud-dependencies</artifactId>
        <groupId>org.springframework.cloud</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>${spring-cloud.version}</version>
      </dependency>

      <dependency>
        <artifactId>mybatis-plus-bom</artifactId>
        <groupId>com.baomidou</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>3.5.9</version>
      </dependency>


    </dependencies>


  </dependencyManagement>
  <description>renren-fast</description>
  <groupId>io.renren</groupId>

  <modelVersion>4.0.0</modelVersion>

  <packaging>jar</packaging>

  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <relativePath/>
    <version>3.4.5</version> <!-- lookup parent from repository -->
  </parent>


  <properties>
    <aliyun.oss.version>2.8.3</aliyun.oss.version>
    <commons.codec.version>1.10</commons.codec.version>
    <commons.configuration.version>1.10</commons.configuration.version>
    <commons.fileupload.version>1.2.2</commons.fileupload.version>
    <commons.io.version>2.5</commons.io.version>
    <commons.lang.version>2.6</commons.lang.version>
    <druid.version>1.1.13</druid.version>
    <fastjson.version>1.2.79</fastjson.version>
    <gson.version>2.8.5</gson.version>
    <hutool.version>4.1.1</hutool.version>
    <java.version>21</java.version>
    <joda.time.version>2.9.9</joda.time.version>
    <jwt.version>0.12.6</jwt.version>
    <kaptcha.version>0.0.9</kaptcha.version>
    <lombok.version>1.18.32</lombok.version>
    <mssql.version>4.0</mssql.version>
    <mybatisplus.version>3.3.1</mybatisplus.version>
    <oracle.version>11.2.0.3</oracle.version>
    <pack-name>${project.artifactId}-${project.version}.jar</pack-name>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <qcloud.cos.version>4.4</qcloud.cos.version>
    <qiniu.version>7.2.23</qiniu.version>
    <quartz.version>2.3.0</quartz.version>
    <!--wagon plugin 配置-->
    <remote-addr>192.168.1.10:22</remote-addr>
    <remote-passwd>123456</remote-passwd>
    <remote-username>root</remote-username>
    <service-path>/work/renren</service-path>
    <spring-cloud.version>2024.0.1</spring-cloud.version>
  </properties>
  <version>3.0.0</version>

</project>
